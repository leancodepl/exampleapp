// <auto-generated />
using System;
using ExampleApp.Core.Services.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExampleApp.Migrations.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LeanCode.DomainModels.MassTransitRelay.Inbox.ConsumedMessage", b =>
                {
                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConsumerType")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("DateConsumed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("MessageId", "ConsumerType");

                    b.HasIndex("DateConsumed");

                    b.ToTable("ConsumedMessages", "dbo");
                });

            modelBuilder.Entity("LeanCode.DomainModels.MassTransitRelay.Outbox.RaisedEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOcurred")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WasPublished")
                        .HasColumnType("boolean");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DateOcurred", "WasPublished")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("RaisedEvents", "dbo");
                });

            modelBuilder.Entity("LeanCode.DomainModels.MassTransitRelay.Outbox.RaisedEvent", b =>
                {
                    b.OwnsOne("LeanCode.DomainModels.MassTransitRelay.Outbox.RaisedEventMetadata", "Metadata", b1 =>
                        {
                            b1.Property<Guid>("RaisedEventId")
                                .HasColumnType("uuid");

                            b1.Property<string>("ActivityContext")
                                .HasColumnType("text");

                            b1.Property<Guid?>("ConversationId")
                                .HasColumnType("uuid");

                            b1.HasKey("RaisedEventId");

                            b1.ToTable("RaisedEvents", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("RaisedEventId");
                        });

                    b.Navigation("Metadata")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
